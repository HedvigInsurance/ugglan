// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 50;
	objects = {

/* Begin PBXBuildFile section */
		0D154B7376A60B566FE80AEA /* CoreUI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = BB06744E479A9CE10D92116D /* CoreUI.framework */; };
		0FF645A30C8B4AC9EFD1B3B7 /* CoreUI.framework in Embed Frameworks */ = {isa = PBXBuildFile; fileRef = BB06744E479A9CE10D92116D /* CoreUI.framework */; settings = {ATTRIBUTES = (CodeSignOnCopy, RemoveHeadersOnCopy, ); }; };
		1F6B167B612C74A10FA73F69 /* CoreUI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = BB06744E479A9CE10D92116D /* CoreUI.framework */; };
		2447E6BC5E062B9AF850035E /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4C90F65370E524946975D8E8 /* UIKit.framework */; };
		2B4F8D00A6450A079EB0B23B /* CoreUI.framework in Embed Frameworks */ = {isa = PBXBuildFile; fileRef = BB06744E479A9CE10D92116D /* CoreUI.framework */; settings = {ATTRIBUTES = (CodeSignOnCopy, RemoveHeadersOnCopy, ); }; };
		3FDE03A6B683ECEB28F8930F /* CoreTesting.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 40A244A5A174D4717A785A19 /* CoreTesting.framework */; };
		447E9A1B96CD873DB1D24AB1 /* CoreTesting.framework in Embed Frameworks */ = {isa = PBXBuildFile; fileRef = 40A244A5A174D4717A785A19 /* CoreTesting.framework */; settings = {ATTRIBUTES = (CodeSignOnCopy, RemoveHeadersOnCopy, ); }; };
		5B14E9909801D3131D3BA809 /* TextStyle.swift in Sources */ = {isa = PBXBuildFile; fileRef = AE69B19F92C396D8A5D1C115 /* TextStyle.swift */; };
		5F505F9A48377C1904BC0C3A /* UiTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = AE38138DE6CA5D1B974F23E2 /* UiTests.swift */; };
		6052F0F7C6C5974249DA237A /* FlowFeedback.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 598D51AF07D65DBDEFE6185F /* FlowFeedback.framework */; };
		7863288B0A46C4DCF8DBBD99 /* Core.framework in Embed Frameworks */ = {isa = PBXBuildFile; fileRef = 663E6DE7A090E554CAA20793 /* Core.framework */; settings = {ATTRIBUTES = (CodeSignOnCopy, RemoveHeadersOnCopy, ); }; };
		78A9AE3CDD2F0C141A78ECAF /* Core.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 663E6DE7A090E554CAA20793 /* Core.framework */; };
		7EF4FE63795185B5D892FCE7 /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 03E5C7BFAB6BF4D81592D14B /* Assets.xcassets */; };
		7EFC7A1D1BA6CA3DDDAF77BE /* TextView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4599EBBF7903557A31809EB7 /* TextView.swift */; };
		8004DAA78728D12EFB956C59 /* Spacing.swift in Sources */ = {isa = PBXBuildFile; fileRef = A38E6416141807B76448D195 /* Spacing.swift */; };
		93011CBEF43B1C6E3B811E86 /* HedvigColors.swift in Sources */ = {isa = PBXBuildFile; fileRef = DE73BDE8DA311012A9F58E56 /* HedvigColors.swift */; };
		9B45B4CCF08085A123D96481 /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 3C3B927DC9E2887C7C0962F8 /* Assets.xcassets */; };
		9D52904140433CBC85601582 /* DynamicColor.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 0485C7696C6DB9BADCF95E08 /* DynamicColor.framework */; };
		A35AA20884B8E59057CD58A6 /* Testing.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 50C67AE51313C8D7B81EA691 /* Testing.framework */; };
		A443E4D146C1CAF19D96DF22 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = A18D683162599E246F42A2FD /* AppDelegate.swift */; };
		A4F472ADBD66BF64DB61C16F /* Assets.swift in Sources */ = {isa = PBXBuildFile; fileRef = 57D8ABE2F42537F8B95B1097 /* Assets.swift */; };
		A740F91B75615D71C75085D0 /* Testing.framework in Embed Frameworks */ = {isa = PBXBuildFile; fileRef = 50C67AE51313C8D7B81EA691 /* Testing.framework */; settings = {ATTRIBUTES = (CodeSignOnCopy, RemoveHeadersOnCopy, ); }; };
		B0A63B868B5ABFF3E0088254 /* Core.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 663E6DE7A090E554CAA20793 /* Core.framework */; };
		B1969A649E2CA40CDA2D8649 /* Fonts.swift in Sources */ = {isa = PBXBuildFile; fileRef = DCC0782852CF5EBAAEA42F61 /* Fonts.swift */; };
		BDCD47C83788F67F70AFEE96 /* FavoritStd-Book.otf in Resources */ = {isa = PBXBuildFile; fileRef = 9356572FF8516FDA0AD98433 /* FavoritStd-Book.otf */; };
		C142D6756C0A9A18899E6C5F /* Button.swift in Sources */ = {isa = PBXBuildFile; fileRef = 35A880BBD5BCCABB41EE91F3 /* Button.swift */; };
		CC13FD5D00D055816B9FC09D /* Core.framework in Embed Frameworks */ = {isa = PBXBuildFile; fileRef = 663E6DE7A090E554CAA20793 /* Core.framework */; settings = {ATTRIBUTES = (CodeSignOnCopy, RemoveHeadersOnCopy, ); }; };
		E0CDFCBFD40A8DB7EE8D4636 /* CoreUI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = BB06744E479A9CE10D92116D /* CoreUI.framework */; };
		EEF7BF2B31244323CFD75811 /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4C90F65370E524946975D8E8 /* UIKit.framework */; };
		F36C7E131213BD77E4D00E69 /* Ui.swift in Sources */ = {isa = PBXBuildFile; fileRef = E5405B520B57D1734C3ABF3E /* Ui.swift */; };
		F3CD4562AC7B214ADF9CE700 /* DynamicColor.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 0485C7696C6DB9BADCF95E08 /* DynamicColor.framework */; };
		FF399F6F0582256CA112DD37 /* FlowFeedback.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 598D51AF07D65DBDEFE6185F /* FlowFeedback.framework */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		816503509DCC3D75EED3C137 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 8631CC4C628A22FE79F3932C /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C6B604A86B8C7E6637F1E0E9;
			remoteInfo = CoreUI;
		};
		C6BE88459815F033A9E15F0B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 8631CC4C628A22FE79F3932C /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C6B604A86B8C7E6637F1E0E9;
			remoteInfo = CoreUI;
		};
		DD74BDD80BE078B8482DA9E0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 8631CC4C628A22FE79F3932C /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C6B604A86B8C7E6637F1E0E9;
			remoteInfo = CoreUI;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXCopyFilesBuildPhase section */
		094C5DC5E73B7DA07DB1C80C /* Embed Frameworks */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstSubfolderSpec = 10;
			files = (
				CC13FD5D00D055816B9FC09D /* Core.framework in Embed Frameworks */,
				2B4F8D00A6450A079EB0B23B /* CoreUI.framework in Embed Frameworks */,
			);
			name = "Embed Frameworks";
			runOnlyForDeploymentPostprocessing = 0;
		};
		5EA2F95C39868A8AF4CC1DBE /* Embed Frameworks */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstSubfolderSpec = 10;
			files = (
			);
			name = "Embed Frameworks";
			runOnlyForDeploymentPostprocessing = 0;
		};
		7B9E37F15A4F68139292D894 /* Embed Frameworks */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstSubfolderSpec = 10;
			files = (
				7863288B0A46C4DCF8DBBD99 /* Core.framework in Embed Frameworks */,
				447E9A1B96CD873DB1D24AB1 /* CoreTesting.framework in Embed Frameworks */,
				0FF645A30C8B4AC9EFD1B3B7 /* CoreUI.framework in Embed Frameworks */,
				A740F91B75615D71C75085D0 /* Testing.framework in Embed Frameworks */,
			);
			name = "Embed Frameworks";
			runOnlyForDeploymentPostprocessing = 0;
		};
		C1F56A9874F3AE0077CB5DF1 /* Embed Frameworks */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstSubfolderSpec = 10;
			files = (
			);
			name = "Embed Frameworks";
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		03E5C7BFAB6BF4D81592D14B /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Assets.xcassets; sourceTree = "<group>"; };
		0485C7696C6DB9BADCF95E08 /* DynamicColor.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = DynamicColor.framework; sourceTree = "<group>"; };
		2E0D96FC772C3FC61B63F3D9 /* CoreUIExample.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist; path = CoreUIExample.plist; sourceTree = "<group>"; };
		35A880BBD5BCCABB41EE91F3 /* Button.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Button.swift; sourceTree = "<group>"; };
		362D75907E3B528AD0E8DB10 /* CoreUI.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist; path = CoreUI.plist; sourceTree = "<group>"; };
		3C3B927DC9E2887C7C0962F8 /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Assets.xcassets; sourceTree = "<group>"; };
		40A244A5A174D4717A785A19 /* CoreTesting.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = CoreTesting.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		445D8A27BFC2150BBB56E7D3 /* iOS-Framework.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = "iOS-Framework.xcconfig"; sourceTree = "<group>"; };
		4599EBBF7903557A31809EB7 /* TextView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TextView.swift; sourceTree = "<group>"; };
		4B3217486226FDE0DAF263A8 /* CoreUIExample.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = CoreUIExample.app; sourceTree = BUILT_PRODUCTS_DIR; };
		4C90F65370E524946975D8E8 /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk/System/Library/Frameworks/UIKit.framework; sourceTree = DEVELOPER_DIR; };
		50C67AE51313C8D7B81EA691 /* Testing.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = Testing.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		57D8ABE2F42537F8B95B1097 /* Assets.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Assets.swift; sourceTree = "<group>"; };
		598D51AF07D65DBDEFE6185F /* FlowFeedback.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = FlowFeedback.framework; sourceTree = "<group>"; };
		5AA1EB710720DE1B38F7C207 /* CoreUITesting.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = CoreUITesting.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		630B6F8220A9DF6CC15AFC08 /* Debug.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = Debug.xcconfig; sourceTree = "<group>"; };
		663E6DE7A090E554CAA20793 /* Core.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = Core.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		7D8980A087DA2CC85F69A4F7 /* Flow.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = Flow.framework; sourceTree = "<group>"; };
		9356572FF8516FDA0AD98433 /* FavoritStd-Book.otf */ = {isa = PBXFileReference; path = "FavoritStd-Book.otf"; sourceTree = "<group>"; };
		A18D683162599E246F42A2FD /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AppDelegate.swift; sourceTree = "<group>"; };
		A38E6416141807B76448D195 /* Spacing.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Spacing.swift; sourceTree = "<group>"; };
		AE38138DE6CA5D1B974F23E2 /* UiTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = UiTests.swift; sourceTree = "<group>"; };
		AE69B19F92C396D8A5D1C115 /* TextStyle.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TextStyle.swift; sourceTree = "<group>"; };
		BB06744E479A9CE10D92116D /* CoreUI.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = CoreUI.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		CD85DEB1B23A6A8516011A02 /* iOS-Base.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = "iOS-Base.xcconfig"; sourceTree = "<group>"; };
		D410BDC952F57C16177ED460 /* CoreUITesting.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist; path = CoreUITesting.plist; sourceTree = "<group>"; };
		D61BA8B982E17B76256AB9B9 /* CoreUITests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = CoreUITests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		DCC0782852CF5EBAAEA42F61 /* Fonts.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Fonts.swift; sourceTree = "<group>"; };
		DE73BDE8DA311012A9F58E56 /* HedvigColors.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HedvigColors.swift; sourceTree = "<group>"; };
		E5405B520B57D1734C3ABF3E /* Ui.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Ui.swift; sourceTree = "<group>"; };
		F920881DE6C2866FFE7CFE77 /* CoreUITests.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist; path = CoreUITests.plist; sourceTree = "<group>"; };
		FBC133BDCB512615C5B867D5 /* Release.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = Release.xcconfig; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		5A9A14B7592968BFE29131F5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				EEF7BF2B31244323CFD75811 /* UIKit.framework in Frameworks */,
				B0A63B868B5ABFF3E0088254 /* Core.framework in Frameworks */,
				0D154B7376A60B566FE80AEA /* CoreUI.framework in Frameworks */,
				F3CD4562AC7B214ADF9CE700 /* DynamicColor.framework in Frameworks */,
				6052F0F7C6C5974249DA237A /* FlowFeedback.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		9ADF0DA2577CCEE856CB6550 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1F6B167B612C74A10FA73F69 /* CoreUI.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		AD093FE092544D2ECF618DAD /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2447E6BC5E062B9AF850035E /* UIKit.framework in Frameworks */,
				78A9AE3CDD2F0C141A78ECAF /* Core.framework in Frameworks */,
				9D52904140433CBC85601582 /* DynamicColor.framework in Frameworks */,
				FF399F6F0582256CA112DD37 /* FlowFeedback.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D9E3411F9AA7E434D82EBBCD /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3FDE03A6B683ECEB28F8930F /* CoreTesting.framework in Frameworks */,
				E0CDFCBFD40A8DB7EE8D4636 /* CoreUI.framework in Frameworks */,
				A35AA20884B8E59057CD58A6 /* Testing.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		1AFD109EB3F525ADADCDF8EB /* Tests */ = {
			isa = PBXGroup;
			children = (
				AE38138DE6CA5D1B974F23E2 /* UiTests.swift */,
			);
			path = Tests;
			sourceTree = "<group>";
		};
		23FAA3C6A5285F74B8100BDD = {
			isa = PBXGroup;
			children = (
				A205B9E9D6FB315A3AE8BC40 /* Project */,
				CA98D3EBEF3A9A0D74B4A755 /* Frameworks */,
				E14C863E6306AB987949D8BD /* Products */,
			);
			sourceTree = "<group>";
		};
		33E588209BC45A86B38F7B31 /* Configurations */ = {
			isa = PBXGroup;
			children = (
				630B6F8220A9DF6CC15AFC08 /* Debug.xcconfig */,
				FBC133BDCB512615C5B867D5 /* Release.xcconfig */,
			);
			path = Configurations;
			sourceTree = "<group>";
		};
		384C669E8A130179BBD15689 /* Derived */ = {
			isa = PBXGroup;
			children = (
				45F36CA53477D08045805AAB /* InfoPlists */,
			);
			path = Derived;
			sourceTree = "<group>";
		};
		4562811C369BEAAD120BE75D /* iOS */ = {
			isa = PBXGroup;
			children = (
				0485C7696C6DB9BADCF95E08 /* DynamicColor.framework */,
				7D8980A087DA2CC85F69A4F7 /* Flow.framework */,
				598D51AF07D65DBDEFE6185F /* FlowFeedback.framework */,
			);
			path = iOS;
			sourceTree = "<group>";
		};
		45F36CA53477D08045805AAB /* InfoPlists */ = {
			isa = PBXGroup;
			children = (
				362D75907E3B528AD0E8DB10 /* CoreUI.plist */,
				2E0D96FC772C3FC61B63F3D9 /* CoreUIExample.plist */,
				D410BDC952F57C16177ED460 /* CoreUITesting.plist */,
				F920881DE6C2866FFE7CFE77 /* CoreUITests.plist */,
			);
			path = InfoPlists;
			sourceTree = "<group>";
		};
		542927FFC36CD7ECA1C3A000 /* Carthage */ = {
			isa = PBXGroup;
			children = (
				F3847B7CBF8BEC1686DE2D56 /* Build */,
			);
			name = Carthage;
			path = ../../Carthage;
			sourceTree = "<group>";
		};
		6191F70F6EAF01E6B98BD7D5 /* Testing */ = {
			isa = PBXGroup;
			children = (
				E5405B520B57D1734C3ABF3E /* Ui.swift */,
			);
			path = Testing;
			sourceTree = "<group>";
		};
		64F8A0104792079E682E06B6 /* Resources */ = {
			isa = PBXGroup;
			children = (
				03E5C7BFAB6BF4D81592D14B /* Assets.xcassets */,
				9356572FF8516FDA0AD98433 /* FavoritStd-Book.otf */,
			);
			path = Resources;
			sourceTree = "<group>";
		};
		66EADFF67A1A8F582C766C86 /* Sources */ = {
			isa = PBXGroup;
			children = (
				F42BDE367759B0185BC5E2AF /* Derived */,
				7FE0C51F9C5C6472A41087B5 /* Styling */,
				35A880BBD5BCCABB41EE91F3 /* Button.swift */,
				DCC0782852CF5EBAAEA42F61 /* Fonts.swift */,
				DE73BDE8DA311012A9F58E56 /* HedvigColors.swift */,
				A38E6416141807B76448D195 /* Spacing.swift */,
				4599EBBF7903557A31809EB7 /* TextView.swift */,
			);
			path = Sources;
			sourceTree = "<group>";
		};
		71FE978397C1F88576E926F5 /* iOS */ = {
			isa = PBXGroup;
			children = (
				CD85DEB1B23A6A8516011A02 /* iOS-Base.xcconfig */,
				445D8A27BFC2150BBB56E7D3 /* iOS-Framework.xcconfig */,
			);
			path = iOS;
			sourceTree = "<group>";
		};
		7FE0C51F9C5C6472A41087B5 /* Styling */ = {
			isa = PBXGroup;
			children = (
				AE69B19F92C396D8A5D1C115 /* TextStyle.swift */,
			);
			path = Styling;
			sourceTree = "<group>";
		};
		8516C94ED96C35619FD92E39 /* Example */ = {
			isa = PBXGroup;
			children = (
				D159A26619D0D8B64E41F1C4 /* Resources */,
				DBFD7B9BE1C29E43581C2DE9 /* Sources */,
			);
			path = Example;
			sourceTree = "<group>";
		};
		A205B9E9D6FB315A3AE8BC40 /* Project */ = {
			isa = PBXGroup;
			children = (
				542927FFC36CD7ECA1C3A000 /* Carthage */,
				D5679A7FBA7B399E740DB9AF /* Configurations */,
				384C669E8A130179BBD15689 /* Derived */,
				8516C94ED96C35619FD92E39 /* Example */,
				64F8A0104792079E682E06B6 /* Resources */,
				66EADFF67A1A8F582C766C86 /* Sources */,
				6191F70F6EAF01E6B98BD7D5 /* Testing */,
				1AFD109EB3F525ADADCDF8EB /* Tests */,
			);
			name = Project;
			sourceTree = "<group>";
		};
		CA98D3EBEF3A9A0D74B4A755 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				4C90F65370E524946975D8E8 /* UIKit.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		D159A26619D0D8B64E41F1C4 /* Resources */ = {
			isa = PBXGroup;
			children = (
				3C3B927DC9E2887C7C0962F8 /* Assets.xcassets */,
			);
			path = Resources;
			sourceTree = "<group>";
		};
		D5679A7FBA7B399E740DB9AF /* Configurations */ = {
			isa = PBXGroup;
			children = (
				F46AE7D0D425F8C99F355F9A /* Base */,
				71FE978397C1F88576E926F5 /* iOS */,
			);
			name = Configurations;
			path = ../../Configurations;
			sourceTree = "<group>";
		};
		DBFD7B9BE1C29E43581C2DE9 /* Sources */ = {
			isa = PBXGroup;
			children = (
				A18D683162599E246F42A2FD /* AppDelegate.swift */,
			);
			path = Sources;
			sourceTree = "<group>";
		};
		E14C863E6306AB987949D8BD /* Products */ = {
			isa = PBXGroup;
			children = (
				663E6DE7A090E554CAA20793 /* Core.framework */,
				40A244A5A174D4717A785A19 /* CoreTesting.framework */,
				BB06744E479A9CE10D92116D /* CoreUI.framework */,
				4B3217486226FDE0DAF263A8 /* CoreUIExample.app */,
				5AA1EB710720DE1B38F7C207 /* CoreUITesting.framework */,
				D61BA8B982E17B76256AB9B9 /* CoreUITests.xctest */,
				50C67AE51313C8D7B81EA691 /* Testing.framework */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		F3847B7CBF8BEC1686DE2D56 /* Build */ = {
			isa = PBXGroup;
			children = (
				4562811C369BEAAD120BE75D /* iOS */,
			);
			path = Build;
			sourceTree = "<group>";
		};
		F42BDE367759B0185BC5E2AF /* Derived */ = {
			isa = PBXGroup;
			children = (
				57D8ABE2F42537F8B95B1097 /* Assets.swift */,
			);
			path = Derived;
			sourceTree = "<group>";
		};
		F46AE7D0D425F8C99F355F9A /* Base */ = {
			isa = PBXGroup;
			children = (
				33E588209BC45A86B38F7B31 /* Configurations */,
			);
			path = Base;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		1F118789E83EBDE57D5132B1 /* CoreUITests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 63DE7BA4FA0E1D8DF633C1F0 /* Build configuration list for PBXNativeTarget "CoreUITests" */;
			buildPhases = (
				1CB437A20E2EAB1A2C746AF1 /* Sources */,
				E31A519E7603A9873110C379 /* Resources */,
				C3D022ACA7C985695415D452 /* Embed Precompiled Frameworks */,
				7B9E37F15A4F68139292D894 /* Embed Frameworks */,
				D9E3411F9AA7E434D82EBBCD /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				B40E051CA9370B37571BE569 /* PBXTargetDependency */,
			);
			name = CoreUITests;
			productName = CoreUITests;
			productReference = D61BA8B982E17B76256AB9B9 /* CoreUITests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		4BC49F9E19CB4C9F0BD9C008 /* CoreUITesting */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 067C47CB9FC39A599D217DC0 /* Build configuration list for PBXNativeTarget "CoreUITesting" */;
			buildPhases = (
				CFD3ACF2F10A5216C29CEBDB /* Sources */,
				30955409CFEC1A938AF11335 /* Resources */,
				6E2BF6A023E662847C695D52 /* Embed Precompiled Frameworks */,
				C1F56A9874F3AE0077CB5DF1 /* Embed Frameworks */,
				9ADF0DA2577CCEE856CB6550 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				19402FBE2ECED2B571A3CACA /* PBXTargetDependency */,
			);
			name = CoreUITesting;
			productName = CoreUITesting;
			productReference = 5AA1EB710720DE1B38F7C207 /* CoreUITesting.framework */;
			productType = "com.apple.product-type.framework";
		};
		C18530B10872453E190F5C21 /* CoreUIExample */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 8F3D6B3437F28F76609F2A65 /* Build configuration list for PBXNativeTarget "CoreUIExample" */;
			buildPhases = (
				D4200CFA621188024C1F7024 /* Sources */,
				955114389BF265F30D68F75E /* Resources */,
				0845311CF0F88E9E028016A9 /* Embed Precompiled Frameworks */,
				094C5DC5E73B7DA07DB1C80C /* Embed Frameworks */,
				5A9A14B7592968BFE29131F5 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				850E64A86940079F90A495CA /* PBXTargetDependency */,
			);
			name = CoreUIExample;
			productName = CoreUIExample;
			productReference = 4B3217486226FDE0DAF263A8 /* CoreUIExample.app */;
			productType = "com.apple.product-type.application";
		};
		C6B604A86B8C7E6637F1E0E9 /* CoreUI */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 0DF587C4FD35086528DDC889 /* Build configuration list for PBXNativeTarget "CoreUI" */;
			buildPhases = (
				24192BA740D4748A0F32A57C /* Sources */,
				92A80D39415403B20FB5ACDD /* Resources */,
				0C652FAC393E4A37DEFD5757 /* Embed Precompiled Frameworks */,
				5EA2F95C39868A8AF4CC1DBE /* Embed Frameworks */,
				AD093FE092544D2ECF618DAD /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = CoreUI;
			productName = CoreUI;
			productReference = BB06744E479A9CE10D92116D /* CoreUI.framework */;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		8631CC4C628A22FE79F3932C /* Project object */ = {
			isa = PBXProject;
			attributes = {
				ORGANIZATIONNAME = "Hedvig AB";
				TargetAttributes = {
				};
			};
			buildConfigurationList = 47671CB80826A75C89AD1E97 /* Build configuration list for PBXProject "CoreUI" */;
			compatibilityVersion = "Xcode 9.3";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				Base,
				en,
			);
			mainGroup = 23FAA3C6A5285F74B8100BDD;
			productRefGroup = E14C863E6306AB987949D8BD /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				C6B604A86B8C7E6637F1E0E9 /* CoreUI */,
				4BC49F9E19CB4C9F0BD9C008 /* CoreUITesting */,
				1F118789E83EBDE57D5132B1 /* CoreUITests */,
				C18530B10872453E190F5C21 /* CoreUIExample */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		30955409CFEC1A938AF11335 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		92A80D39415403B20FB5ACDD /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				7EF4FE63795185B5D892FCE7 /* Assets.xcassets in Resources */,
				BDCD47C83788F67F70AFEE96 /* FavoritStd-Book.otf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		955114389BF265F30D68F75E /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9B45B4CCF08085A123D96481 /* Assets.xcassets in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E31A519E7603A9873110C379 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		0845311CF0F88E9E028016A9 /* Embed Precompiled Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				../../Carthage/Build/iOS/DynamicColor.framework,
				../../Carthage/Build/iOS/DynamicColor.framework.dSYM,
				"../../Carthage/Build/iOS/13D7071F-E931-383B-B45C-330A8BBBBBA0.bcsymbolmap",
				"../../Carthage/Build/iOS/229EBE1E-6ED0-3F99-8A52-8E59D9441068.bcsymbolmap",
				../../Carthage/Build/iOS/Flow.framework,
				../../Carthage/Build/iOS/Flow.framework.dSYM,
				"../../Carthage/Build/iOS/252C51D9-2A23-3992-86BA-E8A72046F3AB.bcsymbolmap",
				"../../Carthage/Build/iOS/D35F0A66-791E-30D7-A608-CC22E465BA7C.bcsymbolmap",
				../../Carthage/Build/iOS/FlowFeedback.framework,
				../../Carthage/Build/iOS/FlowFeedback.framework.dSYM,
				"../../Carthage/Build/iOS/4EA4B823-9137-36B5-9603-311DDE6CDD0E.bcsymbolmap",
				"../../Carthage/Build/iOS/D183E43B-57EB-3BF0-9A43-58E345BD4A78.bcsymbolmap",
			);
			name = "Embed Precompiled Frameworks";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/DynamicColor.framework",
				"${DWARF_DSYM_FOLDER_PATH}/DynamicColor.framework.dSYM",
				"${BUILT_PRODUCTS_DIR}/13D7071F-E931-383B-B45C-330A8BBBBBA0.bcsymbolmap",
				"${BUILT_PRODUCTS_DIR}/229EBE1E-6ED0-3F99-8A52-8E59D9441068.bcsymbolmap",
				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/Flow.framework",
				"${DWARF_DSYM_FOLDER_PATH}/Flow.framework.dSYM",
				"${BUILT_PRODUCTS_DIR}/252C51D9-2A23-3992-86BA-E8A72046F3AB.bcsymbolmap",
				"${BUILT_PRODUCTS_DIR}/D35F0A66-791E-30D7-A608-CC22E465BA7C.bcsymbolmap",
				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/FlowFeedback.framework",
				"${DWARF_DSYM_FOLDER_PATH}/FlowFeedback.framework.dSYM",
				"${BUILT_PRODUCTS_DIR}/4EA4B823-9137-36B5-9603-311DDE6CDD0E.bcsymbolmap",
				"${BUILT_PRODUCTS_DIR}/D183E43B-57EB-3BF0-9A43-58E345BD4A78.bcsymbolmap",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/bin/sh\nset -e\nset -u\nset -o pipefail\n\nfunction on_error {\n  echo \"$(realpath -mq \"${0}\"):$1: error: Unexpected failure\"\n}\ntrap 'on_error $LINENO' ERR\n\nif [ -z ${FRAMEWORKS_FOLDER_PATH+x} ]; then\n  # If FRAMEWORKS_FOLDER_PATH is not set, then there's nowhere for us to copy\n  # frameworks to, so exit 0 (signalling the script phase was successful).\n  exit 0\nfi\n\necho \"mkdir -p ${CONFIGURATION_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}\"\nmkdir -p \"${CONFIGURATION_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}\"\n\nSWIFT_STDLIB_PATH=\"${DT_TOOLCHAIN_DIR}/usr/lib/swift/${PLATFORM_NAME}\"\n# Used as a return value for each invocation of `strip_invalid_archs` function.\nSTRIP_BINARY_RETVAL=0\n# This protects against multiple targets copying the same framework dependency at the same time. The solution\n# was originally proposed here: https://lists.samba.org/archive/rsync/2008-February/020158.html\nRSYNC_PROTECT_TMP_FILES=(--filter \"P .*.??????\")\n# Copies and strips a vendored framework\ninstall_framework()\n{\n  if [ -r \"${BUILT_PRODUCTS_DIR}/$1\" ]; then\n    local source=\"${BUILT_PRODUCTS_DIR}/$1\"\n  elif [ -r \"${BUILT_PRODUCTS_DIR}/$(basename \"$1\")\" ]; then\n    local source=\"${BUILT_PRODUCTS_DIR}/$(basename \"$1\")\"\n  elif [ -r \"$1\" ]; then\n    local source=\"$1\"\n  fi\n  local destination=\"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}\"\n  if [ -L \"${source}\" ]; then\n    echo \"Symlinked...\"\n    source=\"$(readlink \"${source}\")\"\n  fi\n  # Use filter instead of exclude so missing patterns don't throw errors.\n  echo \"rsync --delete -av \"${RSYNC_PROTECT_TMP_FILES[@]}\" --filter \\\"- CVS/\\\" --filter \\\"- .svn/\\\" --filter \\\"- .git/\\\" --filter \\\"- .hg/\\\" --filter \\\"- Headers\\\" --filter \\\"- PrivateHeaders\\\" --filter \\\"- Modules\\\" \\\"${source}\\\" \\\"${destination}\\\"\"\n  rsync --delete -av \"${RSYNC_PROTECT_TMP_FILES[@]}\" --filter \"- CVS/\" --filter \"- .svn/\" --filter \"- .git/\" --filter \"- .hg/\" --filter \"- Headers\" --filter \"- PrivateHeaders\" --filter \"- Modules\" \"${source}\" \"${destination}\"\n  local basename\n  basename=\"$(basename -s .framework \"$1\")\"\n  binary=\"${destination}/${basename}.framework/${basename}\"\n  if ! [ -r \"$binary\" ]; then\n    binary=\"${destination}/${basename}\"\n  elif [ -L \"${binary}\" ]; then\n    echo \"Destination binary is symlinked...\"\n    dirname=\"$(dirname \"${binary}\")\"\n    binary=\"${dirname}/$(readlink \"${binary}\")\"\n  fi\n  # Strip invalid architectures so \"fat\" simulator / device frameworks work on device\n  if [[ \"$(file \"$binary\")\" == *\"dynamically linked shared library\"* ]]; then\n    strip_invalid_archs \"$binary\"\n  fi\n  # Resign the code if required by the build settings to avoid unstable apps\n  code_sign_if_enabled \"${destination}/$(basename \"$1\")\"\n}\n\n\n# Copies and strips a vendored dSYM\ninstall_dsym() {\n  local source=\"$1\"\n  if [ -r \"$source\" ]; then\n    \n    # Copy the dSYM into a the targets temp dir.\n    echo \"rsync --delete -av \"${RSYNC_PROTECT_TMP_FILES[@]}\" --filter \\\"- CVS/\\\" --filter \\\"- .svn/\\\" --filter \\\"- .git/\\\" --filter \\\"- .hg/\\\" --filter \\\"- Headers\\\" --filter \\\"- PrivateHeaders\\\" --filter \\\"- Modules\\\" \\\"${source}\\\" \\\"${DERIVED_FILES_DIR}\\\"\"\n    rsync --delete -av \"${RSYNC_PROTECT_TMP_FILES[@]}\" --filter \"- CVS/\" --filter \"- .svn/\" --filter \"- .git/\" --filter \"- .hg/\" --filter \"- Headers\" --filter \"- PrivateHeaders\" --filter \"- Modules\" \"${source}\" \"${DERIVED_FILES_DIR}\"\n    \n    local basename\n    basename=\"$(basename -s .framework.dSYM \"$source\")\"\n    binary=\"${DERIVED_FILES_DIR}/${basename}.framework.dSYM/Contents/Resources/DWARF/${basename}\"\n    \n    # Strip invalid architectures so \"fat\" simulator / device frameworks work on device\n    if [[ \"$(file \"$binary\")\" == *\"Mach-O \"*\"dSYM companion\"* ]]; then\n      strip_invalid_archs \"$binary\"\n    fi\n    if [[ $STRIP_BINARY_RETVAL == 1 ]]; then\n      # Move the stripped file into its final destination.\n      echo \"rsync --delete -av \"${RSYNC_PROTECT_TMP_FILES[@]}\" --filter \\\"- CVS/\\\" --filter \\\"- .svn/\\\" --filter \\\"- .git/\\\" --filter \\\"- .hg/\\\" --filter \\\"- Headers\\\" --filter \\\"- PrivateHeaders\\\" --filter \\\"- Modules\\\" \\\"${DERIVED_FILES_DIR}/${basename}.framework.dSYM\\\" \\\"${DWARF_DSYM_FOLDER_PATH}\\\"\"\n      rsync --delete -av \"${RSYNC_PROTECT_TMP_FILES[@]}\" --filter \"- CVS/\" --filter \"- .svn/\" --filter \"- .git/\" --filter \"- .hg/\" --filter \"- Headers\" --filter \"- PrivateHeaders\" --filter \"- Modules\" \"${DERIVED_FILES_DIR}/${basename}.framework.dSYM\" \"${DWARF_DSYM_FOLDER_PATH}\"\n    else\n      # The dSYM was not stripped at all, in this case touch a fake folder so the input/output paths from Xcode do not reexecute this script because the file is missing.\n      touch \"${DWARF_DSYM_FOLDER_PATH}/${basename}.framework.dSYM\"\n    fi\n\n  fi\n}\n\n\n# Copies the bcsymbolmap files of a vendored framework\ninstall_bcsymbolmap() {\n    local bcsymbolmap_path=\"$1\"\n    local destination=\"${BUILT_PRODUCTS_DIR}\"\n    echo \"rsync --delete -av \"${RSYNC_PROTECT_TMP_FILES[@]}\" --filter \"- CVS/\" --filter \"- .svn/\" --filter \"- .git/\" --filter \"- .hg/\" --filter \"- Headers\" --filter \"- PrivateHeaders\" --filter \"- Modules\" \"${bcsymbolmap_path}\" \"${destination}\"\"\n    rsync --delete -av \"${RSYNC_PROTECT_TMP_FILES[@]}\" --filter \"- CVS/\" --filter \"- .svn/\" --filter \"- .git/\" --filter \"- .hg/\" --filter \"- Headers\" --filter \"- PrivateHeaders\" --filter \"- Modules\" \"${bcsymbolmap_path}\" \"${destination}\"\n}\n\n\n# Signs a framework with the provided identity\ncode_sign_if_enabled() {\n  if [ -n \"${EXPANDED_CODE_SIGN_IDENTITY:-}\" -a \"${CODE_SIGNING_REQUIRED:-}\" != \"NO\" -a \"${CODE_SIGNING_ALLOWED}\" != \"NO\" ]; then\n    # Use the current code_sign_identity\n    echo \"Code Signing $1 with Identity ${EXPANDED_CODE_SIGN_IDENTITY_NAME}\"\n    local code_sign_cmd=\"/usr/bin/codesign --force --sign ${EXPANDED_CODE_SIGN_IDENTITY} ${OTHER_CODE_SIGN_FLAGS:-} --preserve-metadata=identifier,entitlements '$1'\"\n    code_sign_cmd=\"$code_sign_cmd &\"\n    echo \"$code_sign_cmd\"\n    eval \"$code_sign_cmd\"\n  fi\n}\n\n\n# Strip invalid architectures\nstrip_invalid_archs() {\n  binary=\"$1\"\n  # Get architectures for current target binary\n  binary_archs=\"$(lipo -info \"$binary\" | rev | cut -d ':' -f1 | awk '{$1=$1;print}' | rev)\"\n  # Intersect them with the architectures we are building for\n  intersected_archs=\"$(echo ${ARCHS[@]} ${binary_archs[@]} | tr ' ' '\\n' | sort | uniq -d)\"\n  # If there are no archs supported by this binary then warn the user\n  if [[ -z \"$intersected_archs\" ]]; then\n    echo \"warning: [CP] Vendored binary '$binary' contains architectures ($binary_archs) none of which match the current build architectures ($ARCHS).\"\n    STRIP_BINARY_RETVAL=0\n    return\n  fi\n  stripped=\"\"\n  for arch in $binary_archs; do\n    if ! [[ \"${ARCHS}\" == *\"$arch\"* ]]; then\n      # Strip non-valid architectures in-place\n      lipo -remove \"$arch\" -output \"$binary\" \"$binary\"\n      stripped=\"$stripped $arch\"\n    fi\n  done\n  if [[ \"$stripped\" ]]; then\n    echo \"Stripped $binary of architectures:$stripped\"\n  fi\n  STRIP_BINARY_RETVAL=1\n}\ninstall_framework \"../../Carthage/Build/iOS/DynamicColor.framework\"\ninstall_dsym \"../../Carthage/Build/iOS/DynamicColor.framework.dSYM\"\ninstall_bcsymbolmap \"../../Carthage/Build/iOS/13D7071F-E931-383B-B45C-330A8BBBBBA0.bcsymbolmap\"\ninstall_bcsymbolmap \"../../Carthage/Build/iOS/229EBE1E-6ED0-3F99-8A52-8E59D9441068.bcsymbolmap\"\ninstall_framework \"../../Carthage/Build/iOS/Flow.framework\"\ninstall_dsym \"../../Carthage/Build/iOS/Flow.framework.dSYM\"\ninstall_bcsymbolmap \"../../Carthage/Build/iOS/252C51D9-2A23-3992-86BA-E8A72046F3AB.bcsymbolmap\"\ninstall_bcsymbolmap \"../../Carthage/Build/iOS/D35F0A66-791E-30D7-A608-CC22E465BA7C.bcsymbolmap\"\ninstall_framework \"../../Carthage/Build/iOS/FlowFeedback.framework\"\ninstall_dsym \"../../Carthage/Build/iOS/FlowFeedback.framework.dSYM\"\ninstall_bcsymbolmap \"../../Carthage/Build/iOS/4EA4B823-9137-36B5-9603-311DDE6CDD0E.bcsymbolmap\"\ninstall_bcsymbolmap \"../../Carthage/Build/iOS/D183E43B-57EB-3BF0-9A43-58E345BD4A78.bcsymbolmap\"\n";
		};
		0C652FAC393E4A37DEFD5757 /* Embed Precompiled Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Embed Precompiled Frameworks";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "echo \"Skipping, nothing to be embedded.\"";
		};
		6E2BF6A023E662847C695D52 /* Embed Precompiled Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Embed Precompiled Frameworks";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "echo \"Skipping, nothing to be embedded.\"";
		};
		C3D022ACA7C985695415D452 /* Embed Precompiled Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				../../Carthage/Build/iOS/DynamicColor.framework,
				../../Carthage/Build/iOS/Flow.framework,
				../../Carthage/Build/iOS/FlowFeedback.framework,
			);
			name = "Embed Precompiled Frameworks";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/DynamicColor.framework",
				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/Flow.framework",
				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/FlowFeedback.framework",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/bin/sh\nset -e\nset -u\nset -o pipefail\n\nfunction on_error {\n  echo \"$(realpath -mq \"${0}\"):$1: error: Unexpected failure\"\n}\ntrap 'on_error $LINENO' ERR\n\nif [ -z ${FRAMEWORKS_FOLDER_PATH+x} ]; then\n  # If FRAMEWORKS_FOLDER_PATH is not set, then there's nowhere for us to copy\n  # frameworks to, so exit 0 (signalling the script phase was successful).\n  exit 0\nfi\n\necho \"mkdir -p ${CONFIGURATION_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}\"\nmkdir -p \"${CONFIGURATION_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}\"\n\nSWIFT_STDLIB_PATH=\"${DT_TOOLCHAIN_DIR}/usr/lib/swift/${PLATFORM_NAME}\"\n# Used as a return value for each invocation of `strip_invalid_archs` function.\nSTRIP_BINARY_RETVAL=0\n# This protects against multiple targets copying the same framework dependency at the same time. The solution\n# was originally proposed here: https://lists.samba.org/archive/rsync/2008-February/020158.html\nRSYNC_PROTECT_TMP_FILES=(--filter \"P .*.??????\")\n# Copies and strips a vendored framework\ninstall_framework()\n{\n  if [ -r \"${BUILT_PRODUCTS_DIR}/$1\" ]; then\n    local source=\"${BUILT_PRODUCTS_DIR}/$1\"\n  elif [ -r \"${BUILT_PRODUCTS_DIR}/$(basename \"$1\")\" ]; then\n    local source=\"${BUILT_PRODUCTS_DIR}/$(basename \"$1\")\"\n  elif [ -r \"$1\" ]; then\n    local source=\"$1\"\n  fi\n  local destination=\"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}\"\n  if [ -L \"${source}\" ]; then\n    echo \"Symlinked...\"\n    source=\"$(readlink \"${source}\")\"\n  fi\n  # Use filter instead of exclude so missing patterns don't throw errors.\n  echo \"rsync --delete -av \"${RSYNC_PROTECT_TMP_FILES[@]}\" --filter \\\"- CVS/\\\" --filter \\\"- .svn/\\\" --filter \\\"- .git/\\\" --filter \\\"- .hg/\\\" --filter \\\"- Headers\\\" --filter \\\"- PrivateHeaders\\\" --filter \\\"- Modules\\\" \\\"${source}\\\" \\\"${destination}\\\"\"\n  rsync --delete -av \"${RSYNC_PROTECT_TMP_FILES[@]}\" --filter \"- CVS/\" --filter \"- .svn/\" --filter \"- .git/\" --filter \"- .hg/\" --filter \"- Headers\" --filter \"- PrivateHeaders\" --filter \"- Modules\" \"${source}\" \"${destination}\"\n  local basename\n  basename=\"$(basename -s .framework \"$1\")\"\n  binary=\"${destination}/${basename}.framework/${basename}\"\n  if ! [ -r \"$binary\" ]; then\n    binary=\"${destination}/${basename}\"\n  elif [ -L \"${binary}\" ]; then\n    echo \"Destination binary is symlinked...\"\n    dirname=\"$(dirname \"${binary}\")\"\n    binary=\"${dirname}/$(readlink \"${binary}\")\"\n  fi\n  # Strip invalid architectures so \"fat\" simulator / device frameworks work on device\n  if [[ \"$(file \"$binary\")\" == *\"dynamically linked shared library\"* ]]; then\n    strip_invalid_archs \"$binary\"\n  fi\n  # Resign the code if required by the build settings to avoid unstable apps\n  code_sign_if_enabled \"${destination}/$(basename \"$1\")\"\n}\n\n\n# Copies and strips a vendored dSYM\ninstall_dsym() {\n  local source=\"$1\"\n  if [ -r \"$source\" ]; then\n    \n    # Copy the dSYM into a the targets temp dir.\n    echo \"rsync --delete -av \"${RSYNC_PROTECT_TMP_FILES[@]}\" --filter \\\"- CVS/\\\" --filter \\\"- .svn/\\\" --filter \\\"- .git/\\\" --filter \\\"- .hg/\\\" --filter \\\"- Headers\\\" --filter \\\"- PrivateHeaders\\\" --filter \\\"- Modules\\\" \\\"${source}\\\" \\\"${DERIVED_FILES_DIR}\\\"\"\n    rsync --delete -av \"${RSYNC_PROTECT_TMP_FILES[@]}\" --filter \"- CVS/\" --filter \"- .svn/\" --filter \"- .git/\" --filter \"- .hg/\" --filter \"- Headers\" --filter \"- PrivateHeaders\" --filter \"- Modules\" \"${source}\" \"${DERIVED_FILES_DIR}\"\n    \n    local basename\n    basename=\"$(basename -s .framework.dSYM \"$source\")\"\n    binary=\"${DERIVED_FILES_DIR}/${basename}.framework.dSYM/Contents/Resources/DWARF/${basename}\"\n    \n    # Strip invalid architectures so \"fat\" simulator / device frameworks work on device\n    if [[ \"$(file \"$binary\")\" == *\"Mach-O \"*\"dSYM companion\"* ]]; then\n      strip_invalid_archs \"$binary\"\n    fi\n    if [[ $STRIP_BINARY_RETVAL == 1 ]]; then\n      # Move the stripped file into its final destination.\n      echo \"rsync --delete -av \"${RSYNC_PROTECT_TMP_FILES[@]}\" --filter \\\"- CVS/\\\" --filter \\\"- .svn/\\\" --filter \\\"- .git/\\\" --filter \\\"- .hg/\\\" --filter \\\"- Headers\\\" --filter \\\"- PrivateHeaders\\\" --filter \\\"- Modules\\\" \\\"${DERIVED_FILES_DIR}/${basename}.framework.dSYM\\\" \\\"${DWARF_DSYM_FOLDER_PATH}\\\"\"\n      rsync --delete -av \"${RSYNC_PROTECT_TMP_FILES[@]}\" --filter \"- CVS/\" --filter \"- .svn/\" --filter \"- .git/\" --filter \"- .hg/\" --filter \"- Headers\" --filter \"- PrivateHeaders\" --filter \"- Modules\" \"${DERIVED_FILES_DIR}/${basename}.framework.dSYM\" \"${DWARF_DSYM_FOLDER_PATH}\"\n    else\n      # The dSYM was not stripped at all, in this case touch a fake folder so the input/output paths from Xcode do not reexecute this script because the file is missing.\n      touch \"${DWARF_DSYM_FOLDER_PATH}/${basename}.framework.dSYM\"\n    fi\n\n  fi\n}\n\n\n# Copies the bcsymbolmap files of a vendored framework\ninstall_bcsymbolmap() {\n    local bcsymbolmap_path=\"$1\"\n    local destination=\"${BUILT_PRODUCTS_DIR}\"\n    echo \"rsync --delete -av \"${RSYNC_PROTECT_TMP_FILES[@]}\" --filter \"- CVS/\" --filter \"- .svn/\" --filter \"- .git/\" --filter \"- .hg/\" --filter \"- Headers\" --filter \"- PrivateHeaders\" --filter \"- Modules\" \"${bcsymbolmap_path}\" \"${destination}\"\"\n    rsync --delete -av \"${RSYNC_PROTECT_TMP_FILES[@]}\" --filter \"- CVS/\" --filter \"- .svn/\" --filter \"- .git/\" --filter \"- .hg/\" --filter \"- Headers\" --filter \"- PrivateHeaders\" --filter \"- Modules\" \"${bcsymbolmap_path}\" \"${destination}\"\n}\n\n\n# Signs a framework with the provided identity\ncode_sign_if_enabled() {\n  if [ -n \"${EXPANDED_CODE_SIGN_IDENTITY:-}\" -a \"${CODE_SIGNING_REQUIRED:-}\" != \"NO\" -a \"${CODE_SIGNING_ALLOWED}\" != \"NO\" ]; then\n    # Use the current code_sign_identity\n    echo \"Code Signing $1 with Identity ${EXPANDED_CODE_SIGN_IDENTITY_NAME}\"\n    local code_sign_cmd=\"/usr/bin/codesign --force --sign ${EXPANDED_CODE_SIGN_IDENTITY} ${OTHER_CODE_SIGN_FLAGS:-} --preserve-metadata=identifier,entitlements '$1'\"\n    code_sign_cmd=\"$code_sign_cmd &\"\n    echo \"$code_sign_cmd\"\n    eval \"$code_sign_cmd\"\n  fi\n}\n\n\n# Strip invalid architectures\nstrip_invalid_archs() {\n  binary=\"$1\"\n  # Get architectures for current target binary\n  binary_archs=\"$(lipo -info \"$binary\" | rev | cut -d ':' -f1 | awk '{$1=$1;print}' | rev)\"\n  # Intersect them with the architectures we are building for\n  intersected_archs=\"$(echo ${ARCHS[@]} ${binary_archs[@]} | tr ' ' '\\n' | sort | uniq -d)\"\n  # If there are no archs supported by this binary then warn the user\n  if [[ -z \"$intersected_archs\" ]]; then\n    echo \"warning: [CP] Vendored binary '$binary' contains architectures ($binary_archs) none of which match the current build architectures ($ARCHS).\"\n    STRIP_BINARY_RETVAL=0\n    return\n  fi\n  stripped=\"\"\n  for arch in $binary_archs; do\n    if ! [[ \"${ARCHS}\" == *\"$arch\"* ]]; then\n      # Strip non-valid architectures in-place\n      lipo -remove \"$arch\" -output \"$binary\" \"$binary\"\n      stripped=\"$stripped $arch\"\n    fi\n  done\n  if [[ \"$stripped\" ]]; then\n    echo \"Stripped $binary of architectures:$stripped\"\n  fi\n  STRIP_BINARY_RETVAL=1\n}\ninstall_framework \"../../Carthage/Build/iOS/DynamicColor.framework\"\ninstall_dsym \"../../Carthage/Build/iOS/DynamicColor.framework.dSYM\"\ninstall_bcsymbolmap \"../../Carthage/Build/iOS/13D7071F-E931-383B-B45C-330A8BBBBBA0.bcsymbolmap\"\ninstall_bcsymbolmap \"../../Carthage/Build/iOS/229EBE1E-6ED0-3F99-8A52-8E59D9441068.bcsymbolmap\"\ninstall_framework \"../../Carthage/Build/iOS/Flow.framework\"\ninstall_dsym \"../../Carthage/Build/iOS/Flow.framework.dSYM\"\ninstall_bcsymbolmap \"../../Carthage/Build/iOS/252C51D9-2A23-3992-86BA-E8A72046F3AB.bcsymbolmap\"\ninstall_bcsymbolmap \"../../Carthage/Build/iOS/D35F0A66-791E-30D7-A608-CC22E465BA7C.bcsymbolmap\"\ninstall_framework \"../../Carthage/Build/iOS/FlowFeedback.framework\"\ninstall_dsym \"../../Carthage/Build/iOS/FlowFeedback.framework.dSYM\"\ninstall_bcsymbolmap \"../../Carthage/Build/iOS/4EA4B823-9137-36B5-9603-311DDE6CDD0E.bcsymbolmap\"\ninstall_bcsymbolmap \"../../Carthage/Build/iOS/D183E43B-57EB-3BF0-9A43-58E345BD4A78.bcsymbolmap\"\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		1CB437A20E2EAB1A2C746AF1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				5F505F9A48377C1904BC0C3A /* UiTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		24192BA740D4748A0F32A57C /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				C142D6756C0A9A18899E6C5F /* Button.swift in Sources */,
				A4F472ADBD66BF64DB61C16F /* Assets.swift in Sources */,
				B1969A649E2CA40CDA2D8649 /* Fonts.swift in Sources */,
				93011CBEF43B1C6E3B811E86 /* HedvigColors.swift in Sources */,
				8004DAA78728D12EFB956C59 /* Spacing.swift in Sources */,
				5B14E9909801D3131D3BA809 /* TextStyle.swift in Sources */,
				7EFC7A1D1BA6CA3DDDAF77BE /* TextView.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CFD3ACF2F10A5216C29CEBDB /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F36C7E131213BD77E4D00E69 /* Ui.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D4200CFA621188024C1F7024 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				A443E4D146C1CAF19D96DF22 /* AppDelegate.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		19402FBE2ECED2B571A3CACA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = CoreUI;
			target = C6B604A86B8C7E6637F1E0E9 /* CoreUI */;
			targetProxy = DD74BDD80BE078B8482DA9E0 /* PBXContainerItemProxy */;
		};
		850E64A86940079F90A495CA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = CoreUI;
			target = C6B604A86B8C7E6637F1E0E9 /* CoreUI */;
			targetProxy = C6BE88459815F033A9E15F0B /* PBXContainerItemProxy */;
		};
		B40E051CA9370B37571BE569 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = CoreUI;
			target = C6B604A86B8C7E6637F1E0E9 /* CoreUI */;
			targetProxy = 816503509DCC3D75EED3C137 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		0B971774FB68DFDD61567068 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 445D8A27BFC2150BBB56E7D3 /* iOS-Framework.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/../../Carthage/Build/iOS",
				);
				INFOPLIST_FILE = Derived/InfoPlists/CoreUI.plist;
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 12.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
					"@loader_path/Frameworks",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.hedvig.CoreUI;
				PRODUCT_NAME = CoreUI;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SUPPORTED_PLATFORMS = "iphonesimulator iphoneos";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_COMPILATION_MODE = singlefile;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		4E0E00DFAFDFE855848EF163 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = CD85DEB1B23A6A8516011A02 /* iOS-Base.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "iPhone Developer";
				INFOPLIST_FILE = Derived/InfoPlists/CoreUITests.plist;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
					"@loader_path/Frameworks",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.hedvig.CoreUITests;
				PRODUCT_NAME = CoreUITests;
				SDKROOT = iphoneos;
				SUPPORTED_PLATFORMS = "iphonesimulator iphoneos";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_COMPILATION_MODE = singlefile;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.2;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Release;
		};
		5F41E5B71A1DD66DD13242A8 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = CD85DEB1B23A6A8516011A02 /* iOS-Base.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CODE_SIGN_IDENTITY = "iPhone Developer";
				ENABLE_PREVIEWS = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/../../Carthage/Build/iOS",
				);
				INFOPLIST_FILE = Derived/InfoPlists/CoreUIExample.plist;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.hedvig.CoreUIExample;
				PRODUCT_NAME = CoreUIExample;
				SDKROOT = iphoneos;
				SUPPORTED_PLATFORMS = "iphonesimulator iphoneos";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_COMPILATION_MODE = singlefile;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.2;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Debug;
		};
		61963452C14D92B1974E1F54 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 445D8A27BFC2150BBB56E7D3 /* iOS-Framework.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				INFOPLIST_FILE = Derived/InfoPlists/CoreUITesting.plist;
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
					"@loader_path/Frameworks",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.hedvig.CoreUITesting;
				PRODUCT_NAME = CoreUITesting;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SUPPORTED_PLATFORMS = "iphonesimulator iphoneos";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_COMPILATION_MODE = singlefile;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		79286343C8AC00006E89F4FD /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 445D8A27BFC2150BBB56E7D3 /* iOS-Framework.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				INFOPLIST_FILE = Derived/InfoPlists/CoreUITesting.plist;
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
					"@loader_path/Frameworks",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.hedvig.CoreUITesting;
				PRODUCT_NAME = CoreUITesting;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SUPPORTED_PLATFORMS = "iphonesimulator iphoneos";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_COMPILATION_MODE = singlefile;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		7944A9F6C13C261E5923F4D2 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 630B6F8220A9DF6CC15AFC08 /* Debug.xcconfig */;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		8E7F74D2ABF6797E5B907F63 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = FBC133BDCB512615C5B867D5 /* Release.xcconfig */;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
		9C05A490CED4B07A36EB8EF0 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = CD85DEB1B23A6A8516011A02 /* iOS-Base.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CODE_SIGN_IDENTITY = "iPhone Developer";
				ENABLE_PREVIEWS = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/../../Carthage/Build/iOS",
				);
				INFOPLIST_FILE = Derived/InfoPlists/CoreUIExample.plist;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.hedvig.CoreUIExample;
				PRODUCT_NAME = CoreUIExample;
				SDKROOT = iphoneos;
				SUPPORTED_PLATFORMS = "iphonesimulator iphoneos";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_COMPILATION_MODE = singlefile;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.2;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Release;
		};
		E44F610885B5FF11AD60E851 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 445D8A27BFC2150BBB56E7D3 /* iOS-Framework.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/../../Carthage/Build/iOS",
				);
				INFOPLIST_FILE = Derived/InfoPlists/CoreUI.plist;
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 12.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
					"@loader_path/Frameworks",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.hedvig.CoreUI;
				PRODUCT_NAME = CoreUI;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SUPPORTED_PLATFORMS = "iphonesimulator iphoneos";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_COMPILATION_MODE = singlefile;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		E7F5A978A6B0D8CB65E5FFAC /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = CD85DEB1B23A6A8516011A02 /* iOS-Base.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "iPhone Developer";
				INFOPLIST_FILE = Derived/InfoPlists/CoreUITests.plist;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
					"@loader_path/Frameworks",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.hedvig.CoreUITests;
				PRODUCT_NAME = CoreUITests;
				SDKROOT = iphoneos;
				SUPPORTED_PLATFORMS = "iphonesimulator iphoneos";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_COMPILATION_MODE = singlefile;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.2;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Debug;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		067C47CB9FC39A599D217DC0 /* Build configuration list for PBXNativeTarget "CoreUITesting" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				79286343C8AC00006E89F4FD /* Debug */,
				61963452C14D92B1974E1F54 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		0DF587C4FD35086528DDC889 /* Build configuration list for PBXNativeTarget "CoreUI" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E44F610885B5FF11AD60E851 /* Debug */,
				0B971774FB68DFDD61567068 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		47671CB80826A75C89AD1E97 /* Build configuration list for PBXProject "CoreUI" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				7944A9F6C13C261E5923F4D2 /* Debug */,
				8E7F74D2ABF6797E5B907F63 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		63DE7BA4FA0E1D8DF633C1F0 /* Build configuration list for PBXNativeTarget "CoreUITests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E7F5A978A6B0D8CB65E5FFAC /* Debug */,
				4E0E00DFAFDFE855848EF163 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		8F3D6B3437F28F76609F2A65 /* Build configuration list for PBXNativeTarget "CoreUIExample" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				5F41E5B71A1DD66DD13242A8 /* Debug */,
				9C05A490CED4B07A36EB8EF0 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = 8631CC4C628A22FE79F3932C /* Project object */;
}
