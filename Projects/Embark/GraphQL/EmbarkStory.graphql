fragment EmbarkLinkFragment on EmbarkLink {
    name
    label
}

fragment MessageFragment on EmbarkMessage {
    text
    expressions {
        ...ExpressionFragment
    }
}

fragment BasicExpressionFragment on EmbarkExpression {
    ... on EmbarkExpressionUnary {
        expressionUnaryType: type
        text
    }
    ... on EmbarkExpressionBinary {
        expressionBinaryType: type
        key
        value
        text
    }
}

fragment ExpressionFragment on EmbarkExpression {
    ...BasicExpressionFragment
    ... on EmbarkExpressionMultiple {
        expressionMultipleType: type
        text
        subExpressions {
            ...BasicExpressionFragment
              ... on EmbarkExpressionMultiple {
                expressionMultipleType: type
                text
                subExpressions {
                    ...BasicExpressionFragment
                      ... on EmbarkExpressionMultiple {
                        expressionMultipleType: type
                        text
                        subExpressions {
                            ...BasicExpressionFragment
                        }
                    }
                }
            }
        }
    }
}

fragment ResponseFragment on EmbarkResponse {
    ... on EmbarkMessage {
        ...MessageFragment
    }
    ... on EmbarkGroupedResponse {
        component
        items {
            ...MessageFragment
        }
        title {
            text
        }
    }
}

fragment ApiSingleVariableFragment on EmbarkAPIGraphQLSingleVariable {
    key
    from
    as
}

fragment ApiGeneratedVariableFragment on EmbarkAPIGraphQLGeneratedVariable {
    key
    storeAs
    type
}

fragment ApiMultiActionVariableFragment on EmbarkAPIGraphQLMultiActionVariable {
    key
    variables {
        ...ApiSingleVariableFragment
        ...ApiGeneratedVariableFragment
        ... on EmbarkAPIGraphQLMultiActionVariable {
            key
            variables {
                ...ApiSingleVariableFragment
                ...ApiGeneratedVariableFragment
            }
        }
    }
}

fragment ApiVariablesFragment on EmbarkAPIGraphQLVariable {
    ...ApiSingleVariableFragment
    ...ApiGeneratedVariableFragment
    ...ApiMultiActionVariableFragment
}

fragment ApiFragment on EmbarkApi {
    ... on EmbarkApiGraphQLQuery {
        data {
            next {
                ...EmbarkLinkFragment
            }
            query
            variables {
                ...ApiVariablesFragment
            }
            queryResults: results {
                key
                as
            }
            queryErrors: errors {
                contains
                next {
                    ...EmbarkLinkFragment
                }
            }
        }
    }
    ... on EmbarkApiGraphQLMutation {
        data {
            next {
                ...EmbarkLinkFragment
            }
            mutation
            variables {
                ...ApiVariablesFragment
            }
            mutationResults: results {
               key
               as
            }
            mutationErrors: errors {
                contains
                next {
                    ...EmbarkLinkFragment
                }
            }
        }
    }
}

fragment EmbarkRedirectSingle on EmbarkRedirect {
  ... on EmbarkRedirectUnaryExpression {
    unaryType: type
    to
    passedExpressionKey
    passedExpressionValue
  }
  ... on EmbarkRedirectBinaryExpression {
    binaryType: type
    to
    key
    value
    passedExpressionKey
    passedExpressionValue
  }
}

fragment EmbarkRedirectFragment on EmbarkRedirect {
    ...EmbarkRedirectSingle
    ... on EmbarkRedirectMultipleExpressions {
        multipleType: type
        to
        passedExpressionKey
        passedExpressionValue
        subExpressions {
          ...ExpressionFragment
        }
    }
}

query EmbarkStory($name: String!, $locale: String!) {
    embarkStory(name: $name, locale: $locale) {
        id
        startPassage
        name
        computedStoreValues {
            key
            value
        }
        passages {
            id
            name
            externalRedirect {
                component
                data {
                    location
                }
            }
            tooltips {
              description
              title
            }
            allLinks {
                ...EmbarkLinkFragment
            }
            response {
                ...ResponseFragment
            }
            messages {
                ...MessageFragment
            }
            api {
                ...ApiFragment
            }
            redirects {
              ...EmbarkRedirectFragment
            }
            tracks {
              eventName
              eventKeys
              includeAllKeys
              customData
            }
            action {
                ... on EmbarkActionCore {
                    component
                }
                ... on EmbarkTextAction {
                    component
                    textActionData: data {
                        key
                        placeholder
                        mask
                        api {
                            ...ApiFragment
                        }
                        link {
                            ...EmbarkLinkFragment
                        }
                    }
                }
                ... on EmbarkNumberAction {
                    component
                    numberActionData: data {
                        key
                        placeholder
                        unit
                        maxValue
                        minValue
                        link {
                            ...EmbarkLinkFragment
                        }
                    }
                }
                ... on EmbarkTextActionSet {
                    textActionSetData: data {
                        link {
                            ...EmbarkLinkFragment
                        }
                        textActions {
                            data {
                              title
                              key
                              placeholder
                              mask
                            }
                        }
                    }
                }
                ... on EmbarkSelectAction {
                    component
                    selectActionData: data {
                        options {
                            keys
                            values
                            link {
                                ...EmbarkLinkFragment
                            }
                            api {
                                ...ApiFragment
                            }
                        }
                    }
                }
                ... on EmbarkExternalInsuranceProviderAction {
                    component
                    externalInsuranceProviderData: data {
                        next {
                            ...EmbarkLinkFragment
                        }
                        skip {
                            ...EmbarkLinkFragment
                        }
                    }
                }
                ... on EmbarkPreviousInsuranceProviderAction {
                    component
                    previousInsuranceProviderData: data {
                        next {
                            ...EmbarkLinkFragment
                        }
                        skip {
                            ...EmbarkLinkFragment
                        }
                        providers
                        storeKey
                    }
                }
            }
        }
    }
}
