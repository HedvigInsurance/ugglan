name: WorkspaceApps

defaults:
  run:
    shell: bash -ieo pipefail {0}

on:
  push:
    branches: [ main ]
  pull_request:
    branches: ['*']

jobs:
  generate:
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v2
    - name: Post checkout
      run: sh scripts/post-checkout.sh
    - name: Upload generated
      run: rsync -rav --include="*/" --include='*.xcworkspace/**' --include='*.xcodeproj/**' --include='*.xcworkspace' --include='*.xcodeproj' --include='**/Derived/**.plist' --include='**/Resources/**.lproj' --include='**/Resources/**.lproj/**'  --include='**/Derived/**.swift' --exclude='*' . ${{ secrets.SSH_CACHE_CREDENTIALS }}:/Volumes/Cache/generated/${{ github.sha }}
    
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: |
          TASKS=$(echo $(cat .github/workflows/matrix.json) | sed 's/ //g' )
          echo "::set-output name=matrix::$TASKS"

  should_run:
    runs-on: ubuntu-latest
    needs: [matrix]

    strategy:
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v2
      - name: Should run
        id: should_run
        uses: ./.github/actions/should-run
        with:
          path: ${{ matrix.path }}

  build:
    runs-on: self-hosted
    needs: [matrix, generate, should_run]
    if: needs.should_run.outputs.should_run == 'true'
    name: build_${{matrix.name}}

    strategy:
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}

    steps:
      - name: Build
        if: steps.should_run.outputs.should_run == 'true'
        uses: ./.github/actions/build-app          
        with:
          lane: ${{ matrix.lane }}
          path: ${{ matrix.path }}
          name: ${{ matrix.name }}
          test_scheme: ${{ matrix.test_scheme }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GITHUB_TOKEN: ${{ secrets.MATCH_GITHUB_TOKEN }}
          HEDVIG_GITHUB_APP_ID: ${{ secrets.HEDVIG_GITHUB_APP_ID }}
          HEDVIG_GITHUB_APP_PRIVATE_KEY: ${{ secrets.HEDVIG_GITHUB_APP_PRIVATE_KEY }}
          S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          SSH_CACHE_CREDENTIALS: ${{ secrets.SSH_CACHE_CREDENTIALS }}

  slack:
    runs-on: ubuntu-latest
    if: always()
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: fastlane/build_output
      - name: Fastlane Action
        uses: maierj/fastlane-action@v1.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          SLACK_IOS_BUILDS_URL: ${{ secrets.SLACK_IOS_BUILDS_URL }}
          SLACK_IOS_PR_BUILDS_URL: ${{ secrets.SLACK_IOS_PR_BUILDS_URL }}
          BRANCH_NAME: ${{ github.head_ref }}
          GITHUB_PR_NUMBER: ${{ github.event.number }}
          FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: '180'
          FASTLANE_XCODE_LIST_TIMEOUT: '180'
        with:
          lane: ios slack_message

