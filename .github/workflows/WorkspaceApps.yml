name: WorkspaceApps

defaults:
  run:
    shell: bash -ieo pipefail {0}

on:
  push:
    branches: [ main ]
  pull_request:
    branches: ["*"]

jobs:
  generate:
    runs-on: self-hosted

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    
    steps:
      - uses: actions/checkout@v2
      - name: Git clean
        run: git add . && git reset --hard HEAD
      - name: Post checkout
        run: sh scripts/post-checkout.sh
      - name: Upload generated
        run: rsync -rav --exclude=".git/" --include="*/" --include='*.xcworkspace/**' --include='*.xcodeproj/**' --include='*.xcworkspace' --include='*.xcodeproj' --include='**/Derived/**.plist' --include='**/Resources/**.lproj' --include='**/Resources/**.lproj/**'  --include='**/Derived/**.swift' --exclude='*' . ${{ secrets.SSH_CACHE_CREDENTIALS }}:~/Cache/generated/${{ github.sha }}
      - id: set-matrix
        uses: JoshuaTheMiller/conditional-build-matrix@0.0.1
        with:          
          inputFile: '.github/workflows/matrix.json'
          filter: '[*]'

  build:
    runs-on: self-hosted
    needs: [generate]
    timeout-minutes: 50

    name: Build ${{ matrix.name }}

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.generate.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v2
      - name: Git clean
        run: git add . && git reset --hard HEAD
      - name: Should run
        if: github.ref != 'refs/heads/main'
        id: should_run
        uses: ./.github/actions/should-run
        with:
          path: ${{ matrix.path }}
      - name: Build
        if: github.ref == 'refs/heads/main' || steps.should_run.outputs.should_run == 'true'
        uses: ./.github/actions/build-app          
        with:
          lane: ${{ matrix.lane }}
          path: ${{ matrix.path }}
          name: ${{ matrix.name }}
          test_scheme: ${{ matrix.test_scheme }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GITHUB_TOKEN: ${{ secrets.MATCH_GITHUB_TOKEN }}
          HEDVIG_GITHUB_APP_ID: ${{ secrets.HEDVIG_GITHUB_APP_ID }}
          HEDVIG_GITHUB_APP_PRIVATE_KEY: ${{ secrets.HEDVIG_GITHUB_APP_PRIVATE_KEY }}
          S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          SSH_CACHE_CREDENTIALS: ${{ secrets.SSH_CACHE_CREDENTIALS }}

  test:
    runs-on: self-hosted
    needs: [generate]
    timeout-minutes: 50

    name: Test ${{ matrix.name }}

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.generate.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v2
      - name: Git clean
        run: git add . && git reset --hard HEAD
      - name: Should run
        if: github.ref != 'refs/heads/main'
        id: should_run
        uses: ./.github/actions/should-run
        with:
          path: ${{ matrix.path }}
      - name: Test
        if: (github.ref == 'refs/heads/main' || steps.should_run.outputs.should_run == 'true') && matrix.test_scheme
        uses: ./.github/actions/test-app          
        with:
          test_scheme: ${{ matrix.test_scheme }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GITHUB_TOKEN: ${{ secrets.MATCH_GITHUB_TOKEN }}
          HEDVIG_GITHUB_APP_ID: ${{ secrets.HEDVIG_GITHUB_APP_ID }}
          HEDVIG_GITHUB_APP_PRIVATE_KEY: ${{ secrets.HEDVIG_GITHUB_APP_PRIVATE_KEY }}
          S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          SSH_CACHE_CREDENTIALS: ${{ secrets.SSH_CACHE_CREDENTIALS }}

  slack:
    runs-on: ubuntu-latest
    if: always()
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: fastlane/build_output
      - name: Fastlane Action
        uses: maierj/fastlane-action@v1.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          SLACK_IOS_BUILDS_URL: ${{ secrets.SLACK_IOS_BUILDS_URL }}
          SLACK_IOS_PR_BUILDS_URL: ${{ secrets.SLACK_IOS_PR_BUILDS_URL }}
          BRANCH_NAME: ${{ github.head_ref }}
          GITHUB_PR_NUMBER: ${{ github.event.number }}
          FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: '180'
          FASTLANE_XCODE_LIST_TIMEOUT: '180'
        with:
          lane: ios slack_message

